---
layout: default

# keep it short! shown in the header
title: Demo of the Demo

# these are all optional and add links to the footer
repo: learnwithjason/demo-base
episode: https://www.learnwithjason.dev/creating-css-variable-font-text-effects
tutorial: https://codepen.io/jlengstorf/pen/QWbdLjb
---

<h1>Twilio Poll</h1>

<div class="poll">
  <div class="chart"></div>
  <ul class="results">
    <li class="yes"></li>
    <li class="no"></li>
  </ul>
  <h3>Text +1 406 356 0389 to vote!</h3>
</div>

<script src="https://unpkg.com/d3@5.16.0/dist/d3.min.js"></script>
<script src="https://media.twiliocdn.com/sdk/js/sync/v0.12/twilio-sync.min.js"></script>
<script>
  function updateResults(values) {
    const data = Object.entries(values).map(([name, value]) => ({
      name,
      value,
    }));
    buildChart(data);
    Object.entries(values).forEach(([key, value]) => {
      document.querySelector(`.${key}`).innerText = value;
    });
  }

  function buildChart(data) {
    const x = d3
      .scaleLinear()
      .domain([0, d3.max(data, (d) => d.value)])
      .range([0, 350]);
    const y = d3
      .scaleBand()
      .domain(d3.range(data.length))
      .rangeRound([0, 100])
      .padding(0.1);

    const svg = d3.create('svg').attr('viewbox', [0, 0, 350, 100]);

    svg
      .append('g')
      .attr('fill', 'steelblue')
      .selectAll('rect')
      .data(data)
      .join('rect')
      .attr('x', x(0))
      .attr('y', (_, i) => y(i))
      .attr('width', (d) => x(d.value) - x(0))
      .attr('height', y.bandwidth());

    const chart = document.querySelector('.chart');
    const oldChart = chart.querySelector('svg');
    if (oldChart) chart.removeChild(oldChart);
    chart.appendChild(svg.node());
  }

  async function getToken() {
    const token = await fetch(
      '/.netlify/functions/get-twilio-token'
    ).then((response) => response.text());

    const client = new Twilio.Sync.Client(token, { logLevel: 'info' });

    client.on('connectionStateChanged', (...rest) => {
      console.log({ rest });
    });

    const document = await client.document('LWJ Text To Vote');
    updateResults(document.value);

    document.on('updated', ({ value }) => {
      console.log(value);
      updateResults(value);
    });
  }

  getToken();
</script>
